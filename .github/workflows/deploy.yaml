name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 0: init CodeQl
    - name: Init CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp

    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.x

    # Step 3: Restore Dependencies
    - name: Restore Dependencies
      run: dotnet restore midnight.sln

    # Step 4: Build Solution
    - name: Build Solution
      run: dotnet build midnight.sln --no-restore --configuration Release

    # Step 5: Run Unit Tests
    - name: Run Unit Tests
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

    # Step 6: Quality Assessment (Example: CodeQL or SonarQube)
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        pwd
        docker build --no-cache -t ${{secrets.DOCKER_USERNAME}}/barstation:latest -f ./Docker/Dockerfile .
        docker push ${{secrets.DOCKER_USERNAME}}/barstation:latest